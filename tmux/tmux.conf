# set prefix
unbind C-b
set -g prefix C-q
bind C-q send-prefix

# split panes using | and -
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# switch panes using alt-arrow combinations
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind-key -n 'M-H' if-shell "$is_vim" 'send-keys M-H' 'resize-pane -L 1'
bind-key -n 'M-J' if-shell "$is_vim" 'send-keys M-J' 'resize-pane -D 1'
bind-key -n 'M-K' if-shell "$is_vim" 'send-keys M-K' 'resize-pane -U 1'
bind-key -n 'M-L' if-shell "$is_vim" 'send-keys M-L' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-H resize-pane -L 1
bind-key -T copy-mode-vi M-J resize-pane -D 1
bind-key -T copy-mode-vi M-K resize-pane -U 1
bind-key -T copy-mode-vi M-L resize-pane -R 1

bind x confirm-before "kill-pane"

# enable mouse mode
set -g mouse on

# don't rename windows automatically
set-option -g status-interval 5
set-option -g automatic-rename-format '#{b:pane_current_path}/#{pane_current_command}'

# automatically renumber windows when a window is closed
set-option -g renumber-windows on

setw -g mode-keys vi
set -sg escape-time 0

set-option -g default-shell /bin/zsh
set-option -g default-terminal "screen-256color"

# transfer copied text to attached terminal with yank
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'yank > #{pane_tty}'

if-shell 'test -n "$SSH_CLIENT"' \
   'source-file ~/.tmux/tmux.remote.conf'

if-shell 'test -z "$SSH_CLIENT"' \
   'source-file ~/.tmux/tmux.local.conf'
